import React, { useEffect, useState } from 'react';
import Grid from '@material-ui/core/Grid';
import { Button, Card, CardContent, CardHeader, Divider, Drawer, List, Typography } from '@material-ui/core';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import FormControl from '@material-ui/core/FormControl';
import TextField from '@material-ui/core/TextField';
import Tabs from "@material-ui/core/Tabs";
import Tab from "@material-ui/core/Tab";
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListSubheader from '@material-ui/core/ListSubheader';
import Avatar from '@material-ui/core/Avatar';
import ShareIcon from '@material-ui/icons/Share';
import { fade, makeStyles } from '@material-ui/core/styles';

import CardSection from '../components/CardSection.js';
import Plaid from '../components/Plaid';
import ImageLoader from '../components/ImageLoader.js';
import { useAuth } from '../hooks/useAuth.js';
import { useRouter } from '../hooks/useRouter.js';
import axios from 'axios';
import Api from '../api';

const messages = [
  {
    id: 1,
    primary: 'Brunch this week?',
    secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    primary: 'Birthday Gift',
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    primary: 'Recipe to try',
    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
    person: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    primary: 'Yes!',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    primary: "Doctor's Appointment",
    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
    person: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    primary: 'Discussion',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    primary: 'Summer BBQ',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: '/static/images/avatar/1.jpg',
  },
];


const useStyles = makeStyles((theme) => ({
  list: {
    marginBottom: theme.spacing(2),
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  }
}));


const AccountsPage = (props) => {
  const classes = useStyles();
  const router = useRouter();
  const auth = useAuth();
  const [user, setUser] = useState({});
  const [pending, setPending] = useState(false);

  const fetchLoggedInUser = async () => {
    const userId = await auth.user.uid;
    const loggedInUser = await Api.getUser(userId);
    setUser(loggedInUser);
    setPending(false);
  };

  useEffect(() => {
    setPending(true);
    fetchLoggedInUser();
  }, []);

  const saved_items = user.data ? user.data[0].saved_items : [];

  console.log(user);

  const [title, setTitle] = useState("Purchase & Sales");
  const [section, setSection] = useState("purchases");

  const handleNav = {
    //use these function to change the components being rendered in the accounts section dynamically
    //todo --> Can turn this into child routes with react-router-dom
    purchases: () => {
      setTitle("Purchases & Sales");
    },
    banking: () => {
      setTitle("Payment & Deposit methods")
    },
    saves: () => {
      setTitle("Saved items")
    },
    settings: () => {
      setTitle("Account Settings")
    }
  };

  const handleDelete = (e) => {
    console.log("You are deleting me?!", e.target);
  };

  return (
    <Grid container spacing={3}>
      <Grid item xs={12} md={3}>
        <Card>
          <CardContent>
            <Typography component="h1" variant="h4" align="left">
              Account
            </Typography>
          </CardContent>
          <CardContent>
          
            <Divider />
            <Typography component="h6" variant="h6" align="left">
              Transactions
            </Typography>
            <List>
              <ListItem button onClick={() => handleNav.purchases()}>
                <ListItemText primary="Purchases & Sales" />
              </ListItem>
              <ListItem button onClick={() => handleNav.banking()}>
                <ListItemText primary="Payment & Deposit methods" />
              </ListItem>
            </List>
            <Divider />
            <Typography component="h6" variant="h6" align="left">
              Saves
            </Typography>
            <List>
              <ListItem button onClick={() => handleNav.saves()}>
                <ListItemText primary="Saved items" />
              </ListItem>
              
              </List>
            <Divider />
            <Typography component="h6" variant="h6" align="left">
              Account
            </Typography>
            <List>
              <ListItem button onClick={() => handleNav.settings()}>
                <ListItemText primary="Account Settings" />
              </ListItem>
              <ListItem button>
                <ListItemText primary="View public profile" />
                <ListItemIcon>
                  <ShareIcon />
                </ListItemIcon>
              </ListItem>
            </List>
          
          </CardContent>
        </Card>
      </Grid>
      <Grid item xs={12} md={9}>
        <Typography component="h1" variant="h4" align="left">
          {title}
        </Typography>


{/* 
  Move this Card into its own component.
  Call it TransactionsSection.js 
*/}
        {/* 
        <Card style={{height: '60vh'}}>
          <Tabs
            value={props.activeKey}
            indicatorColor="primary"
            textColor="primary"
            centered={false}
          >
            <Tab
              label="Accounts"
              value="general"
              // component={Link}
              // to="/settings/general"
            ></Tab>

            <Tab
              label="Transactions"
              value="password"
              // component={Link}
              // to="/settings/password"
            ></Tab>

          </Tabs>
          <Divider />
          <FormControl component="fieldset">
            <TextField type="text" name="balance" label="Balance" variant="outlined" />
            <TextField type="text" name="balance" label="$0.00" variant="outlined" />
          </FormControl>
          {auth &&
            <Plaid auth={auth} /> 
          }
          <ImageLoader />
          <CardSection />
        </Card> 
        */}

{/* 
  Move this Card into its own component.
  Call it LikedItemsSection.js 
*/}
        <Card style={{height: '60vh'}}>
          <CardContent>
            <List className={classes.list}>
              {saved_items.map(({ userId: _id, name, price, product_id }) => (
                <React.Fragment key={product_id}>
                  <ListItem button>
                    <ListItemAvatar>
                      <Avatar alt="Profile Picture" src="" />
                    </ListItemAvatar>
                    <ListItemText primary={name} />
                    <Button onClick={handleDelete} color="secondary">Delete</Button>
                  </ListItem>
                </React.Fragment>
              ))}
            </List>
          </CardContent>
        </Card>


      </Grid>
    </Grid>
  )
}

export default AccountsPage